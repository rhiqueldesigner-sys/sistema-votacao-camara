// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email         String   @unique
  name          String
  password      String
  role          Role     @default(COUNCILOR)
  createdAt     DateTime @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime @updatedAt @db.Timestamptz(6)
  
  // Relations
  bills         Bill[]
  votes         Vote[]
  
  @@map("users")
}

model Bill {
  id            String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title         String
  description   String
  status        BillStatus  @default(DRAFT)
  votingStart   DateTime?   @db.Timestamptz(6)
  votingEnd     DateTime?   @db.Timestamptz(6)
  createdAt     DateTime    @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime    @updatedAt @db.Timestamptz(6)
  
  // Relations
  authorId      String      @db.Uuid
  author        User        @relation(fields: [authorId], references: [id], onDelete: Cascade)
  votes         Vote[]
  
  @@map("bills")
}

model Vote {
  id        String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  option    VoteOption
  createdAt DateTime    @default(now()) @db.Timestamptz(6)
  
  // Relations
  userId    String      @db.Uuid
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  billId    String      @db.Uuid
  bill      Bill        @relation(fields: [billId], references: [id], onDelete: Cascade)
  
  @@unique([userId, billId])
  @@map("votes")
}

enum Role {
  ADMIN
  COUNCILOR
}

enum BillStatus {
  DRAFT
  ACTIVE
  COMPLETED
  CANCELLED
}

enum VoteOption {
  YES
  NO
  ABSTENTION
}